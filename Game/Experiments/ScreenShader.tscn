[gd_scene load_steps=4 format=2]

[ext_resource path="res://Experiments/twilight-5-8x.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D palette : hint_black; // Insert a palette from lospec for instance
uniform int palette_size = 16;

void fragment(){ 
	vec4 color = texture(SCREEN_TEXTURE, SCREEN_UV);
	vec4 new_color = vec4(.0);
	
//	for (int i = 0; i < palette_size; i++) {
	vec4 palette_color = texture(palette, vec2(1.0 / float(palette_size) * float(0), .0));
	if (distance(palette_color, color) < distance(new_color, color)) {
		new_color = palette_color;
	}
	palette_color = texture(palette, vec2(1.0 / float(palette_size) * float(1), .0));
	if (distance(palette_color, color) < distance(new_color, color)) {
		new_color = palette_color;
	}
	palette_color = texture(palette, vec2(1.0 / float(palette_size) * float(2), .0));
	if (distance(palette_color, color) < distance(new_color, color)) {
		new_color = palette_color;
	}
	palette_color = texture(palette, vec2(1.0 / float(palette_size) * float(3), .0));
	if (distance(palette_color, color) < distance(new_color, color)) {
		new_color = palette_color;
	}
	palette_color = texture(palette, vec2(1.0 / float(palette_size) * float(4), .0));
	if (distance(palette_color, color) < distance(new_color, color)) {
		new_color = palette_color;
	}
	palette_color = texture(palette, vec2(1.0 / float(palette_size) * float(5), .0));
	if (distance(palette_color, color) < distance(new_color, color)) {
		new_color = palette_color;
	}
	COLOR = new_color;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/palette_size = 5
shader_param/palette = ExtResource( 1 )

[node name="ScreenShader" type="ColorRect"]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
rect_min_size = Vector2( 1280, 720 )
mouse_filter = 2
